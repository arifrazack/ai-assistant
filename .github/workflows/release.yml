name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: AI Assistant ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's New in ${{ steps.get_version.outputs.VERSION }}
          
          ### üöÄ Features
          - New automation tools
          - Performance improvements
          - UI/UX enhancements
          
          ### üêõ Bug Fixes
          - Fixed various issues
          - Improved stability
          
          ### üìñ Documentation
          - Updated setup guides
          - Improved API documentation
          
          ## üîß Installation
          
          ### macOS
          Download `AI-Assistant-${{ steps.get_version.outputs.VERSION }}-mac.dmg`
          
          ### Windows
          Download `AI-Assistant-${{ steps.get_version.outputs.VERSION }}-win.exe`
          
          ### Linux
          Download `AI-Assistant-${{ steps.get_version.outputs.VERSION }}-linux.AppImage`
          
          ## üìã Requirements
          - Node.js 18+ (for development)
          - OpenAI API key
          - Google OAuth credentials (optional)
          
          ## üìö Documentation
          - [Setup Guide](https://github.com/${{ github.repository }}/blob/main/SETUP.md)
          - [Contributing Guide](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md)
          - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
        draft: false
        prerelease: false

  build-macos:
    needs: create-release
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm run full-install
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:5001
        NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
    
    - name: Build Electron app for macOS
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CSC_IDENTITY_AUTO_DISCOVERY: false  # Disable code signing for now
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/AI Assistant-*.dmg
        asset_name: AI-Assistant-${{ github.ref_name }}-mac.dmg
        asset_content_type: application/octet-stream

  build-windows:
    needs: create-release
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm run full-install
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:5001
        NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
    
    - name: Build Electron app for Windows
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/AI Assistant Setup *.exe
        asset_name: AI-Assistant-${{ github.ref_name }}-win.exe
        asset_content_type: application/octet-stream

  build-linux:
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libdrm2 libgtk-3-dev libgbm-dev
    
    - name: Install dependencies
      run: npm run full-install
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:5001
        NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
    
    - name: Build Electron app for Linux
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/AI Assistant-*.AppImage
        asset_name: AI-Assistant-${{ github.ref_name }}-linux.AppImage
        asset_content_type: application/octet-stream

  publish-npm:
    needs: create-release
    runs-on: ubuntu-latest
    if: false  # Disable npm publishing for now since it's a desktop app
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        registry-url: https://registry.npmjs.org/
        cache: 'npm'
    
    - name: Install dependencies
      run: npm run full-install
    
    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_BACKEND_URL: http://localhost:5001
        NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
    
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
